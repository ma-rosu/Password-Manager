<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAKQBAACkAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzJycAPUFFAD1ARQA9QEYAPEJEAjxCQwM8QkMESlFTAQAA
        AAAAAAABREtNATtBQwM8QUQBToYcAD5QPAA8OkgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADxDQwA8Q0QAPENEBDxDQxU8Q0McPENDIDxDQyI8Q0MkPENEJj1C
        QB46QESEQltz0j9PXc45NjBMP1BYHTxCQic8Q0MhPENDHjxDQxo8Q0MOPUVCAD1FQgA8QUMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPENDADxDRAA8Q0QDPENDETxDQxg8Q0McPENDHjxD
        QyE9RkceOUBBLUBFSexHe6z/VKn4/0BQYeQxFAAhQVpoFDxCQR88Q0MaPENDFjxCQws9RUMAPUVDADxB
        QwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEFFADxBRQA8QUYAPEFFADxBRQA8QUUAPEFFAEAz
        VgAa4QAAPEFGAQQAAAAAAAAYXXKH8mqCmv5Ef7T7TYa2/TxCSMk6OjYxNikaADk1MAI9Q0wAVACzAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxBRQBDLS8ARSgqATNaYAMA//8AAe77AAL5
        +gAA//8AAP//AAD//wA3T1UATVZiAjk5PAA3P0J/cZKx/2iBmP1Dea38VKf2/z9QX9gcAAAGV7j/AzxA
        QgM9SUUAPEJHADxBRQA8QUUAPEFFADxBRQA8QUUAAAAAAAAAAAAAAAAAPUFEAD1BRAA8QUUBPUFFADxB
        RQA9QUUAAAAAAAAAAAAAAAAAAAAAAP8AAAAyAgAAZparAklobwA2JCODd4+u/2eAlv1Fgrr8Snuk/jER
        AEUyFAAAPD08Az5JVgRNi7gCY+z/AUJdeQQ8QUQDPEJHADo6OAA8QUUAPEFFAAAAAABBNDcBcAAAAGsA
        AAM9P0OHLmdw2CxsdtUta3TWLWt11i1rddYta3XWLWt11i1rddYta3TXLWx21itud88rWF78eZOz/2eA
        l/5Cdaf/SG+W7DxARKk4MCYyOC8lADk1MAIwGg4AOjo7ADs8PQA+SFECPEBEATxARAA8QUUAPEBEADhL
        UARCMTMAQDY4cBucrf8A6v/8AeL8/wHj/f8B4/3/AeP9/wHj/f8B4/3/AeP9/wHj/f8B4/3/AuP8/wDs
        //8bhpL/fI2s/2aCm/5Eeq/8Up3n/0JacOI5NjGFQFJku0FWa8g+SFKnNyofTP///wBHa3wCNy0rATxB
        RQA8QUUAKXaABCxudQA2UVaoCNfm/wDs//kA5f79AOb//QDm//0A5v/9AOb//QDm//0A5v/9AOb//QDm
        //0A5f/9Aeb+/wDv//8chpP/fIml/2mVv/5Rrf/7U6Tt/k2Lyv9SovH/U6X3/1Gc5v1IdqP/PUNJqioA
        AAgAAAAANywfATxBRQAne4YEKnJ8ADZSWKkI0Of/AOr/+wDk/v8A5f//AOX//wDl//8A5f//AOX//wDl
        //8A5f//AOX//wDl//8A5P7/AeX9/wDv//8hho//Xoe4/1Kt//9Vq/z+VrH/+1Ss//xUq//8Va39+1e3
        //pMicP/PEFFoj9NXABGa5ACPUNIACd5hQQrcXsANlJYqgfR6P8A6v/7AOT+/wDl//8A5f//AOX//wDl
        //8A5f//AOX//wDl//8A5f//AOX//wDl//8A5P7/AeX+/wDu//8qaXX/VZnm/1Su//9UqPz/VKr+/1Sq
        //9Uqf7/U6f6/le2//xHcpn/NSIRPDUfCgA8QEQDJ3qFBCpxfAA2UliqB9Ho/wDq//sA5P7/AOX//wDl
        //8A5f//AOX//wDl//8A5f//AOX//wDl//8A5f//AOX//wDl//8A5v//AN70/zdzjf9Xp/3/VKv//1Sq
        //9Uqv//VKr//1Sq/v5Uqv39Va//+06T0v86P0KFOj9DAD5MWQQneoUEKnF8ADZSWKoH0ej/AOr/+wDk
        /v8A5f//AOX//wDl//8A5f//AOX//wDl//8A5f//AOX//wDl//8A5f//AOT+/wDq//8B0ub/SnSN/1iv
        //9Tqf7/VKr//1Sq//9Uq///VKz9/1So+P9TsP/7Vp7i/0VOU6BSYWoATWN1BCd6hQQqcXwANlJYqgfR
        6P8A6v/7AOT+/wDl//8A5f//AOX//wDl//8A5f//AOX//wDl//8A5f//AOX//wDl//8A5f//Aej//wDa
        8v9PeYf/eLr+/0um//9Uqv//Vav//lWq/v9IcZjtQFNk1VKa4f53rNz/Q0NDjEtLSwBJVF4EJ3qFBCpx
        fAA2UliqB9Ho/wDq//sA5P7/AOX//wDl//8A5f//AOX//wDl//8A5f//AOX//wDl//8A5f//AOX//wDl
        //8B4/3/AO///yeAjf+TrdH/esT//1Sn+v9RrP/8S5bf/zc8P54AAAAsa4if/3WWsv8eFQ1HIBgSADxB
        RQMoeoUEK3F8ADZSWKoI0ej/AOr/+wDk/v8A5f//AOX//wDl//8A5f//AOX//wDl//8A5f//AOX//wDl
        //8A5f//AOX//wDk/v8A7P//BMja/1Jtf/+h0Pv+mdP/+4PC/vyBwv/+bI2t9WF4j+d5nL//RE1Vtrz/
        /wDd//8BPEFFACd5hQQqcXwANlJYqgjR6P8A6//7A+T+/wLl//8C5f//AuX//wLl//8C5f//AuX//wLl
        //8C5f//AuX//wLl//8C5f//AuX//wPi/P8A9P//Epqm/1VWZfuCrNP/mMb1/5zM/P+Vxvf9d5m7/0dS
        XMQOAAAUAAAAAC0rKAE8QUUAM3qEBDxyegA9UliqENHo/wDp//sB4/7/AOT//wDk//8A5P//AOT//wDk
        //8A5P//AOT//wDk//8A5P//AOT//wDk//8A5P//AeL9/wDv//0grr3/Ox0acDQ+QHZMWmfJUWJy0kZQ
        WbcrKCVhAAAABv///wAnJSUBPEFFADxBRQBbg4YEZHx9AEpVWKlv3Of/TPD//Enq/P9K6/3/Suv9/0rr
        /f9K6/3/Suv9/0rr/f9K6/3/Suv9/0rr/f9K6/3/Suv9/0rr/f9H6fv/Wvn//Gqyuv8zIyVVMh4fAD5E
        SAT///8APkVKAD5ESQBDS1ECPUJGAT1CRwA8QkYAPEFFAE1obQRDV14APklPnoXa3v+f///6nP3+/53/
        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
        C//QJAv/yAAT/8gAE//UAC//6gAX/+SBL/8=
</value>
  </data>
</root>